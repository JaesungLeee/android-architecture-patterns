// Generated by view binder compiler. Do not edit!
package com.jslee.mvp_login_sample.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.jslee.mvp_login_sample.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityInfoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView emailTextView;

  @NonNull
  public final AppCompatButton logoutButton;

  @NonNull
  public final TextView nameTextView;

  @NonNull
  public final TextView passwordTextView;

  @NonNull
  public final TextView userEmailTextView;

  @NonNull
  public final TextView userNameTextView;

  @NonNull
  public final TextView userPasswordTextView;

  private ActivityInfoBinding(@NonNull ConstraintLayout rootView, @NonNull TextView emailTextView,
      @NonNull AppCompatButton logoutButton, @NonNull TextView nameTextView,
      @NonNull TextView passwordTextView, @NonNull TextView userEmailTextView,
      @NonNull TextView userNameTextView, @NonNull TextView userPasswordTextView) {
    this.rootView = rootView;
    this.emailTextView = emailTextView;
    this.logoutButton = logoutButton;
    this.nameTextView = nameTextView;
    this.passwordTextView = passwordTextView;
    this.userEmailTextView = userEmailTextView;
    this.userNameTextView = userNameTextView;
    this.userPasswordTextView = userPasswordTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.email_textView;
      TextView emailTextView = ViewBindings.findChildViewById(rootView, id);
      if (emailTextView == null) {
        break missingId;
      }

      id = R.id.logout_button;
      AppCompatButton logoutButton = ViewBindings.findChildViewById(rootView, id);
      if (logoutButton == null) {
        break missingId;
      }

      id = R.id.name_textView;
      TextView nameTextView = ViewBindings.findChildViewById(rootView, id);
      if (nameTextView == null) {
        break missingId;
      }

      id = R.id.password_textView;
      TextView passwordTextView = ViewBindings.findChildViewById(rootView, id);
      if (passwordTextView == null) {
        break missingId;
      }

      id = R.id.user_email_textView;
      TextView userEmailTextView = ViewBindings.findChildViewById(rootView, id);
      if (userEmailTextView == null) {
        break missingId;
      }

      id = R.id.user_name_textView;
      TextView userNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (userNameTextView == null) {
        break missingId;
      }

      id = R.id.user_password_textView;
      TextView userPasswordTextView = ViewBindings.findChildViewById(rootView, id);
      if (userPasswordTextView == null) {
        break missingId;
      }

      return new ActivityInfoBinding((ConstraintLayout) rootView, emailTextView, logoutButton,
          nameTextView, passwordTextView, userEmailTextView, userNameTextView,
          userPasswordTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
